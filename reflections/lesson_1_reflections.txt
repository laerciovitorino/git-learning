    Q.: How did viewing a diff between two versions of a file help you see the 
    bug that was introduced?
    
    A.: The tool I used(i.e. diff on Linux terminal) pinpointed each difference 
    between the different versions of the file, showing me the changes that were 
    made to the original version of the file and let me fix those mistakes 
    easily.

    Q.: How could having easy access to the entire history of a file make you a 
    more efficient programmer in the long term?

    A.: I can compare what I did wrong in the past with what I'm doing now, and 
    learn with my mistakes over time. Also, I can improve myself in a certain
    subject and then I can review my past works and then improve them with my 
    new skills.

    Q.: What do you think are the pros and cons of manually choosing when to 
    create a commit, like you do in Git, vs having versions automatically saved, 
    like Google docs does?

    A.: Pros:
        > I can have more control in what moment I should save my progress;
        > Sometimes it's much easier to keep track of which version of the
          file I'm working on;
        > It's easy to fix a mistake by reverting a file to a specific version
          of it.
        
        Cons:
        > It can be hard sometimes to decide when is a good moment to save a
          version of the file;
        > There is a possibility to forget to commit and then loose a lot of
          changes made in some version of the file.
       

    Q.: Why do you think some version control systems, like Git, allow saving 
    multiple files in one commit, while others, like Google Docs, treat each 
    file separately?

    R.: Because those systems have different purposes. For example in Git,
        people are almost always working in projects that have multiple files 
        related to each other, and a system that can keep track of changes in 
        those files is really important and helpful. On the other hand, when
        people use to work on Google Docs, it's really common to work on 
        unrelated files due to the nature and purpose of those files
        (e.g. academic work, papers, résumés, spreadsheets etc.).

    Q.: How can you use the commands git log and git diff to view the history of 
    files?

    A.: With the git log command I can see who did what and in which files. I
        can see all the changes made over time in the files of some project.
        With the git diff command I can compare two versions of some file or,
        I can compare different versions of different files in the projects and
        see what changed over time and how those files and the entire project
        were affected by those changes.

    Q.: How might using version control make you more confident to make changes 
    that could break something?

    A.: Whenever I make a mistake and insert some bug in my code, I can easily
        revert the code to a previous version that I know it is working, see
        what I have done wrong and then fix it.

    Q.: Now that you have your workspace set up, what do you want to try using 
    Git for?

    A.: I want to use Git to work on different kinds of projects, to contribute
        with the community, to keep track of the files in the projects I am 
        working on and the projects I will work on, that is I want to use Git
        in as many as I can.
