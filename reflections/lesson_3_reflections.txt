    Q.: When would you want to use a remote repository rather than keeping all 
        your work local?
    
    A.: It's always a good idea to have a remote repository when you want share 
        all your work with other people, or when you want other people 
        collaborate with you in some task or project, or even when you want your
        work accessible wherever you go to work whenever you can.
    
    Q.: Why might you want to always pull changes manually rather than having
        Git automatically stay up-to-date with your remote repository?
    
    A.: Because is not always you want all the code/files that are in the remote
        at a certain time. So it is preferable that the user has the control
        over which files are necessary and relevant in each circumstances.
    
    Q.: Describe the differences between forks, clones, and branches. When
        would you use one instead of another?
    
    A.: Forks are like clones but work that way only on Github context. Clone is
        the process of pulling a repository from a remote location(e.g. a server
        to your local machine, or to 'copy' one repository into another one in 
        your local machine. Branches are labels created to commits and are like
        clones but only work that way in the local machine.
        Fork is used to clone a project in the Github environment.
        Clone is used to pulling down remote repositories into your local
        machine or to copy one repository into another one in your local
        machine.
        Branches is used to label commits for a specific purpose, for example
        to create and test new feature in a project.
    
    Q.: What is the benefit of having a copy of the last known state of the
        remote stored locally?
    
    A.: It's really helpful and avoids some mistakes when occur of doing a merge
        into the local master or other repository. With the last knwon state of
        the remote stored locally the user can decide whether is a good choice
        update your local branch or not, and also helps to see what was changed
        in the repository and compare with your local changes.
    
    Q.: How would you collaborate without using Git or Github? What would be
        easier, and what would be harder?
    
    A.: I could use tools such as Google Drive or Dropbox to collaborate with
        others. I think it would be easier to share files and all the process
        would be made via GUI, so I didn't have to learn commands to synchronize
        files, to avoid conflicts and to turn the files public to anyone who
        might wanted to collaborate, but on the other hand this process is
        likely to be be error prone and it is very easy to have a lot of 
        repeated files inside one folder/directory and to control which vesion 
        of files is the correct one is much harder.
    
    Q.: When would you want to make changes in a separate branch rather than
        directly in master? What benefits does each approach have?
    
    A.: When I don't know if the changes I'm going to insert will affect
        negatively the entire project, which could lead to broke the master 
        branch and bring a lot of headache, and so I need someone else to look
        at them and decide whether it's okay.
        The benefits in doing changes in a separate branch instead of insert
        code direct to the master it's the opportunity to collaborate with
        others withou the fear of doing something wrong or that could lead to a
        broken project in some point. It helps the contributor to get confidence
        and makes it more helpful all the process of collaborating.
        
